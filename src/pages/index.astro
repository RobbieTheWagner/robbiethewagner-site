---
import { Image } from 'astro:assets';
import Layout from '../layouts/Layout.astro';
import Button from '../components/Button.astro';
import Card from '../components/Card.astro';
import Container from '../components/Container.astro';
import {
  GitHubIcon,
  LinkedInIcon,
  TwitterIcon,
} from '../components/SocialIcons.astro';
// Import images (paths may need adjustment based on your Astro setup)
import logoAmazon from '../images/logos/amazon.svg';
import logoApple from '../images/logos/apple.svg';
import logoNetflix from '../images/logos/netflix.svg';
import logoShipShape from '../images/logos/ship-shape.svg';
import image1 from '../images/photos/image-1.jpg';
import image2 from '../images/photos/image-2.jpg';
import image3 from '../images/photos/image-3.jpg';
import image4 from '../images/photos/image-4.jpg';
import image5 from '../images/photos/image-5.jpg';
import { formatDate } from '../lib/formatDate';
import { getAllArticles } from '../lib/getAllArticles';

// Get articles data
const articles = (await getAllArticles())
  .slice(0, 4)
  .map(({ component, ...meta }) => meta);

// Resume data
const resume = [
  {
    company: 'Amazon',
    title: 'Senior Software Engineer',
    logo: logoAmazon,
    start: '2023',
    end: {
      label: 'Present',
      dateTime: new Date().getFullYear(),
    },
  },
  {
    company: 'Apple',
    title: 'Lead Software Engineer',
    logo: logoApple,
    start: '2022',
    end: '2023',
  },
  {
    company: 'Netflix',
    title: 'Senior Front End Developer',
    logo: logoNetflix,
    start: '2018',
    end: '2019',
  },
  {
    company: 'Ship Shape',
    title: 'Partner',
    logo: logoShipShape,
    start: '2017',
    end: '2023',
  },
];

// Image rotations
const rotations = [
  'rotate-2',
  '-rotate-2',
  'rotate-2',
  'rotate-2',
  '-rotate-2',
];

const description = `I'm Robbie Wagner, and I currently sling JavaScript for Amazon. I
previously slung JavaScript for Apple and Netflix as well, and hope to
complete my FAANG tour one day.`;

const title =
  'Robbie Wagner - EmberJS and Tailwind fanboy, podcaster, and content creator';
---

<Layout title={title}>
  <!-- SEO Meta -->
  <meta name="description" content={description} slot="head" />

  <!-- Main content -->
  <Container className="mt-9">
    <div class="max-w-2xl">
      <h1
        class="text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl"
      >
        EmberJS and Tailwind fanboy, podcaster, and content creator.
      </h1>

      <p class="mt-6 text-base text-zinc-600 dark:text-zinc-400">
        {description}
      </p>

      <div class="mt-6 flex gap-6">
        <a
          href="https://twitter.com/RobbieTheWagner"
          aria-label="Follow on Twitter"
          class="group -m-1 p-1"
        >
          <TwitterIcon
            class="h-6 w-6 fill-zinc-500 transition group-hover:fill-zinc-600 dark:fill-zinc-400 dark:group-hover:fill-zinc-300"
          />
        </a>

        <a
          href="https://github.com/RobbieTheWagner"
          aria-label="Follow on GitHub"
          class="group -m-1 p-1"
        >
          <GitHubIcon
            class="h-6 w-6 fill-zinc-500 transition group-hover:fill-zinc-600 dark:fill-zinc-400 dark:group-hover:fill-zinc-300"
          />
        </a>

        <a
          href="https://linkedin.com/in/RobbieTheWagner"
          aria-label="Follow on LinkedIn"
          class="group -m-1 p-1"
        >
          <LinkedInIcon
            class="h-6 w-6 fill-zinc-500 transition group-hover:fill-zinc-600 dark:fill-zinc-400 dark:group-hover:fill-zinc-300"
          />
        </a>
      </div>
    </div>
  </Container>

  <!-- Photos Section -->
  <div class="mt-16 sm:mt-20">
    <div class="-my-4 flex justify-center gap-5 overflow-hidden py-4 sm:gap-8">
      {
        [image1, image2, image3, image4, image5].map((image, imageIndex) => (
          <div
            class:list={[
              'relative aspect-[9/10] w-44 flex-none overflow-hidden rounded-xl bg-zinc-100 dark:bg-zinc-800 sm:w-72 sm:rounded-2xl',
              rotations[imageIndex % rotations.length],
            ]}
          >
            <Image
              src={image}
              alt=""
              sizes="(min-width: 640px) 18rem, 11rem"
              class="absolute inset-0 h-full w-full object-cover"
            />
          </div>
        ))
      }
    </div>
  </div>

  <!-- Articles and Resume Section -->
  <Container className="mt-24 md:mt-28">
    <div
      class="mx-auto grid max-w-xl grid-cols-1 gap-y-20 lg:max-w-none lg:grid-cols-2"
    >
      <div class="flex flex-col gap-16">
        {
          articles.map((article) => (
            <article>
              <Card>
                <a href={`/articles/${article.slug}`} class="cursor-pointer">
                  <h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
                    {article.title}
                  </h2>
                </a>
                <time
                  datetime={article.date}
                  class="relative z-10 order-first mb-3 flex items-center text-sm text-zinc-400 dark:text-zinc-500 pl-3.5"
                >
                  {formatDate(article.date)}
                </time>
                <p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">
                  {article.description}
                </p>
                <div class="mt-4 flex items-center text-sm font-medium text-teal-500">
                  <a href={`/articles/${article.slug}`}>Read article</a>
                </div>
              </Card>
            </article>
          ))
        }
      </div>

      <div class="space-y-10 lg:pl-16 xl:pl-24">
        <!-- Resume component -->
        <div
          class="rounded-2xl border border-zinc-100 p-6 dark:border-zinc-700/40"
        >
          <h2
            class="flex text-sm font-semibold text-zinc-900 dark:text-zinc-100"
          >
            <svg
              viewBox="0 0 24 24"
              fill="none"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
              class="h-6 w-6 flex-none"
            >
              <path
                d="M2.75 9.75a3 3 0 0 1 3-3h12.5a3 3 0 0 1 3 3v8.5a3 3 0 0 1-3 3H5.75a3 3 0 0 1-3-3v-8.5Z"
                class="fill-zinc-100 stroke-zinc-400 dark:fill-zinc-100/10 dark:stroke-zinc-500"
              ></path>
              <path
                d="M3 14.25h6.249c.484 0 .952-.002 1.316.319l.777.682a.996.996 0 0 0 1.316 0l.777-.682c.364-.32.832-.319 1.316-.319H21M8.75 6.5V4.75a2 2 0 0 1 2-2h2.5a2 2 0 0 1 2 2V6.5"
                class="stroke-zinc-400 dark:stroke-zinc-500"></path>
            </svg>
            <span class="ml-3">Work</span>
          </h2>
          <ol class="mt-6 space-y-4">
            {
              resume.map((role) => (
                <li class="flex gap-4">
                  <div class="relative mt-1 flex h-10 w-10 flex-none items-center justify-center rounded-full shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0">
                    <Image src={role.logo} alt="" class="h-7 w-7" />
                  </div>
                  <dl class="flex flex-auto flex-wrap gap-x-2">
                    <dt class="sr-only">Company</dt>
                    <dd class="w-full flex-none text-sm font-medium text-zinc-900 dark:text-zinc-100">
                      {role.company}
                    </dd>
                    <dt class="sr-only">Role</dt>
                    <dd class="text-xs text-zinc-500 dark:text-zinc-400">
                      {role.title}
                    </dd>
                    <dt class="sr-only">Date</dt>
                    <dd
                      class="ml-auto text-xs text-zinc-400 dark:text-zinc-500"
                      aria-label={`${role.start.label ?? role.start} until ${
                        role.end.label ?? role.end
                      }`}
                    >
                      <time datetime={role.start.dateTime ?? role.start}>
                        {role.start.label ?? role.start}
                      </time>{' '}
                      <span aria-hidden="true">â€”</span>{' '}
                      <time datetime={role.end.dateTime ?? role.end}>
                        {role.end.label ?? role.end}
                      </time>
                    </dd>
                  </dl>
                </li>
              ))
            }
          </ol>
        </div>
      </div>
    </div>
  </Container>
</Layout>
