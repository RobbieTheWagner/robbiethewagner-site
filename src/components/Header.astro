---
import { Image } from 'astro:assets';
import Container from './Container.astro';
import avatarImage from '../images/avatar.jpg';

// Get the current path to determine active links
const pathname = new URL(Astro.request.url).pathname;
---

<header class="pointer-events-none relative z-50 flex flex-none flex-col">
  <div class="top-0 z-10 h-16 pt-6">
    <Container>
      <div class="relative flex gap-4">
        <div class="flex flex-1">
          <a href="/" aria-label="Home" class="pointer-events-auto">
            <Image
              src={avatarImage}
              alt=""
              sizes="2.25rem"
              class="h-9 w-9 rounded-full bg-zinc-100 object-cover dark:bg-zinc-800"
              width={36}
              height={36}
            />
          </a>
        </div>
        <div class="flex flex-1 justify-end md:justify-center">
          <nav class="pointer-events-auto hidden md:block">
            <ul class="flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10">
              <li>
                <a
                  href="/about"
                  class:list={[
                    'relative block px-3 py-2 transition',
                    pathname === '/about'
                      ? 'text-teal-500 dark:text-teal-400'
                      : 'hover:text-teal-500 dark:hover:text-teal-400',
                  ]}
                >
                  About
                  {pathname === '/about' && (
                    <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
                  )}
                </a>
              </li>
              <li>
                <a
                  href="/articles"
                  class:list={[
                    'relative block px-3 py-2 transition',
                    pathname === '/articles'
                      ? 'text-teal-500 dark:text-teal-400'
                      : 'hover:text-teal-500 dark:hover:text-teal-400',
                  ]}
                >
                  Articles
                  {pathname === '/articles' && (
                    <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
                  )}
                </a>
              </li>
              <li>
                <a
                  href="/projects"
                  class:list={[
                    'relative block px-3 py-2 transition',
                    pathname === '/projects'
                      ? 'text-teal-500 dark:text-teal-400'
                      : 'hover:text-teal-500 dark:hover:text-teal-400',
                  ]}
                >
                  Projects
                  {pathname === '/projects' && (
                    <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
                  )}
                </a>
              </li>
              <li>
                <a
                  href="/speaking"
                  class:list={[
                    'relative block px-3 py-2 transition',
                    pathname === '/speaking'
                      ? 'text-teal-500 dark:text-teal-400'
                      : 'hover:text-teal-500 dark:hover:text-teal-400',
                  ]}
                >
                  Speaking
                  {pathname === '/speaking' && (
                    <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
                  )}
                </a>
              </li>
              <li>
                <a
                  href="/uses"
                  class:list={[
                    'relative block px-3 py-2 transition',
                    pathname === '/uses'
                      ? 'text-teal-500 dark:text-teal-400'
                      : 'hover:text-teal-500 dark:hover:text-teal-400',
                  ]}
                >
                  Uses
                  {pathname === '/uses' && (
                    <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
                  )}
                </a>
              </li>
            </ul>
          </nav>
          <div class="pointer-events-auto md:hidden">
            <button
              type="button"
              class="group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20"
              aria-label="Toggle navigation"
              id="toggle-nav"
            >
              Menu
              <svg viewBox="0 0 8 6" aria-hidden="true" class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400">
                <path
                  d="M1.75 1.75 4 4.25l2.25-2.5"
                  fill="none"
                  stroke-width="1.5"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                />
              </svg>
            </button>
            <div
              id="mobile-nav"
              class="fixed inset-x-4 top-8 z-50 origin-top scale-95 rounded-3xl bg-white p-8 opacity-0 ring-1 ring-zinc-900/5 dark:bg-zinc-900 dark:ring-zinc-800 hidden"
            >
              <div class="flex flex-row-reverse items-center justify-between">
                <button
                  type="button"
                  aria-label="Close menu"
                  class="-m-1 p-1"
                  id="close-nav"
                >
                  <svg viewBox="0 0 24 24" aria-hidden="true" class="h-6 w-6 text-zinc-500 dark:text-zinc-400">
                    <path
                      d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="1.5"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    />
                  </svg>
                </button>
                <h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">
                  Navigation
                </h2>
              </div>
              <nav class="mt-6">
                <ul class="-my-2 divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300">
                  <li><a href="/about" class="block py-2">About</a></li>
                  <li><a href="/articles" class="block py-2">Articles</a></li>
                  <li><a href="/projects" class="block py-2">Projects</a></li>
                  <li><a href="/speaking" class="block py-2">Speaking</a></li>
                  <li><a href="/uses" class="block py-2">Uses</a></li>
                </ul>
              </nav>
            </div>
          </div>
        </div>
        <div class="flex justify-end md:flex-1">
          <div class="pointer-events-auto">
            <button
              type="button"
              aria-label="Toggle dark mode"
              class="group rounded-full bg-white/90 px-3 py-2 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur transition dark:bg-zinc-800/90 dark:ring-white/10 dark:hover:ring-white/20"
              id="theme-toggle"
            >
              <svg
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
                aria-hidden="true"
                class="h-6 w-6 fill-zinc-100 stroke-zinc-500 transition group-hover:fill-zinc-200 group-hover:stroke-zinc-700 dark:hidden [@media(prefers-color-scheme:dark)]:fill-teal-50 [@media(prefers-color-scheme:dark)]:stroke-teal-500 [@media(prefers-color-scheme:dark)]:group-hover:fill-teal-50 [@media(prefers-color-scheme:dark)]:group-hover:stroke-teal-600"
              >
                <path d="M8 12.25A4.25 4.25 0 0 1 12.25 8v0a4.25 4.25 0 0 1 4.25 4.25v0a4.25 4.25 0 0 1-4.25 4.25v0A4.25 4.25 0 0 1 8 12.25v0Z" />
                <path
                  d="M12.25 3v1.5M21.5 12.25H20M18.791 18.791l-1.06-1.06M18.791 5.709l-1.06 1.06M12.25 20v1.5M4.5 12.25H3M6.77 6.77 5.709 5.709M6.77 17.73l-1.061 1.061"
                  fill="none"
                />
              </svg>
              <svg
                viewBox="0 0 24 24"
                aria-hidden="true"
                class="hidden h-6 w-6 fill-zinc-700 stroke-zinc-500 transition dark:block [@media(prefers-color-scheme:dark)]:group-hover:stroke-zinc-400 [@media_not_(prefers-color-scheme:dark)]:fill-teal-400/10 [@media_not_(prefers-color-scheme:dark)]:stroke-teal-500"
              >
                <path
                  d="M17.25 16.22a6.937 6.937 0 0 1-9.47-9.47 7.451 7.451 0 1 0 9.47 9.47ZM12.75 7C17 7 17 2.75 17 2.75S17 7 21.25 7C17 7 17 11.25 17 11.25S17 7 12.75 7Z"
                  stroke-width="1.5"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </Container>
  </div>
</header>

<script>
  // Mobile navigation toggle
  const toggleNav = document.getElementById('toggle-nav');
  const closeNav = document.getElementById('close-nav');
  const mobileNav = document.getElementById('mobile-nav');
  const overlay = document.createElement('div');
  overlay.className = 'fixed inset-0 z-50 bg-zinc-800/40 backdrop-blur-sm dark:bg-black/80 opacity-0 hidden';
  document.body.appendChild(overlay);

  function openNav() {
    mobileNav.classList.remove('hidden', 'scale-95', 'opacity-0');
    mobileNav.classList.add('scale-100', 'opacity-100');
    overlay.classList.remove('hidden', 'opacity-0');
    overlay.classList.add('opacity-100');
  }

  function closeNavMenu() {
    mobileNav.classList.remove('scale-100', 'opacity-100');
    mobileNav.classList.add('scale-95', 'opacity-0');
    setTimeout(() => mobileNav.classList.add('hidden'), 150);
    overlay.classList.remove('opacity-100');
    overlay.classList.add('opacity-0');
    setTimeout(() => overlay.classList.add('hidden'), 150);
  }

  toggleNav.addEventListener('click', openNav);
  closeNav.addEventListener('click', closeNavMenu);
  overlay.addEventListener('click', closeNavMenu);

  // Dark mode toggle
  const themeToggle = document.getElementById('theme-toggle');

  function disableTransitionsTemporarily() {
    document.documentElement.classList.add('[&_*]:!transition-none');
    window.setTimeout(() => {
      document.documentElement.classList.remove('[&_*]:!transition-none');
    }, 0);
  }

  function toggleMode() {
    disableTransitionsTemporarily();

    let darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
    let isSystemDarkMode = darkModeMediaQuery.matches;
    let isDarkMode = document.documentElement.classList.toggle('dark');

    if (isDarkMode === isSystemDarkMode) {
      delete window.localStorage.isDarkMode;
    } else {
      window.localStorage.isDarkMode = isDarkMode;
    }
  }

  themeToggle.addEventListener('click', toggleMode);

  // Initialize dark mode
  let darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
  let isSystemDarkMode = darkModeMediaQuery.matches;
  let isDarkMode = window.localStorage.isDarkMode === 'true';
  if (isDarkMode === isSystemDarkMode) {
    delete window.localStorage.isDarkMode;
  }
  if (isDarkMode) {
    document.documentElement.classList.add('dark');
  } else if (isDarkMode === false) {
    document.documentElement.classList.remove('dark');
  }
</script> 