---
import Twitter from './icons/Twitter.astro';
import GitHub from './icons/GitHub.astro';
import LinkedIn from './icons/LinkedIn.astro';

export { Twitter, GitHub, LinkedIn };

interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<div class={`flex space-x-4 ${className}`}>
  <a
    href="https://twitter.com/yourhandle"
    target="_blank"
    rel="noopener noreferrer"
    class="text-gray-500 hover:text-blue-400 dark:text-gray-400 dark:hover:text-blue-300 transition-colors"
    aria-label="Twitter"
  >
    <Twitter className="w-6 h-6" />
  </a>
  
  <a
    href="https://github.com/yourusername"
    target="_blank"
    rel="noopener noreferrer"
    class="text-gray-500 hover:text-gray-800 dark:text-gray-400 dark:hover:text-white transition-colors"
    aria-label="GitHub"
  >
    <GitHub className="w-6 h-6" />
  </a>
  
  <a
    href="https://linkedin.com/in/yourprofile"
    target="_blank"
    rel="noopener noreferrer"
    class="text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-500 transition-colors"
    aria-label="LinkedIn"
  >
    <LinkedIn className="w-6 h-6" />
  </a>
</div>

---
interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<div class={`flex space-x-4 ${className}`}>
  <slot />
</div>

<script>
  // This script can handle any interactive behavior if needed
</script>

export const TwitterIcon = ({ className = "", ...props }) => {
  return (
    <a
      href="https://twitter.com"
      target="_blank"
      rel="noopener noreferrer"
      className={`text-gray-500 hover:text-blue-400 dark:text-gray-400 dark:hover:text-blue-300 transition-colors ${className}`}
      aria-label="Twitter profile"
      {...props}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
        className="w-6 h-6"
        aria-hidden="true"
        focusable="false"
      >
        <path d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"></path>
      </svg>
    </a>
  );
};

export const GitHubIcon = ({ className = "", ...props }) => {
  return (
    <a
      href="https://github.com"
      target="_blank"
      rel="noopener noreferrer"
      className={`text-gray-500 hover:text-gray-800 dark:text-gray-400 dark:hover:text-white transition-colors ${className}`}
      aria-label="GitHub profile"
      {...props}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
        className="w-6 h-6"
        aria-hidden="true"
        focusable="false"
      >
        <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
      </svg>
    </a>
  );
};

export const LinkedInIcon = ({ className = "", ...props }) => {
  return (
    <a
      href="https://linkedin.com"
      target="_blank"
      rel="noopener noreferrer"
      className={`text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-500 transition-colors ${className}`}
      aria-label="LinkedIn profile"
      {...props}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
        className="w-6 h-6"
        aria-hidden="true"
        focusable="false"
      >
        <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
        <rect x="2" y="9" width="4" height="12"></rect>
        <circle cx="4" cy="4" r="2"></circle>
      </svg>
    </a>
  );
};

